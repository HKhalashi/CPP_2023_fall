//304. Range Sum Query 2D - Immutable
#include <vector>
#include <iostream>

class NumMatrix {
private:
    std::vector<std::vector<int>> sums;

public:
    NumMatrix(std::vector<std::vector<int>>& matrix) {
        int m = matrix.size();
        int n = matrix[0].size();
        sums.assign(m + 1, std::vector<int>(n + 1, 0));

        for (int i = 1; i <= m; ++i) {
            for (int j = 1; j <= n; ++j) {
                sums[i][j] = sums[i - 1][j] + sums[i][j - 1] - sums[i - 1][j - 1] + matrix[i - 1][j - 1];
            }
        }
    }

    int sumRegion(int row1, int col1, int row2, int col2) {
        return sums[row2 + 1][col2 + 1] - sums[row1][col2 + 1] - sums[row2 + 1][col1] + sums[row1][col1];
    }
};

int main() {
    std::vector<std::vector<int>> matrix = {
            {3, 0, 1, 4, 2},
            {5, 6, 3, 2, 1},
            {1, 2, 0, 1, 5},
            {4, 1, 0, 1, 7},
            {1, 0, 3, 0, 5}
    };

    NumMatrix numMatrix(matrix);


    std::cout << "Sum Region (2, 1, 4, 3): " << numMatrix.sumRegion(2, 1, 4, 3) << std::endl; // expected output: 8
    std::cout << "Sum Region (1, 1, 2, 2): " << numMatrix.sumRegion(1, 1, 2, 2) << std::endl; // expected output: 11
    std::cout << "Sum Region (1, 2, 2, 4): " << numMatrix.sumRegion(1, 2, 2, 4) << std::endl; // expected output: 12

    return 0;
}
