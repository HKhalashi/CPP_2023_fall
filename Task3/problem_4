//303. Range Sum Query - Immutable
#include <vector>
#include <iostream>

class NumArray {
private:
    std::vector<int> prefixSum;

public:
    NumArray(std::vector<int>& nums) {
        int n = nums.size();
        prefixSum.resize(n + 1);
        prefixSum[0] = 0;
        for (int i = 1; i <= n; ++i) {
            prefixSum[i] = prefixSum[i - 1] + nums[i - 1];
        }
    }

    int sumRange(int left, int right) {
        return prefixSum[right + 1] - prefixSum[left];
    }
};

int main() {
    std::vector<int> nums = {-2, 0, 3, -5, 2, -1};
    NumArray numArray(nums);

    std::cout << "Sum Range (0, 2): " << numArray.sumRange(0, 2) << std::endl; // expected output: 1
    std::cout << "Sum Range (2, 5): " << numArray.sumRange(2, 5) << std::endl; // expected output: -1
    std::cout << "Sum Range (0, 5): " << numArray.sumRange(0, 5) << std::endl; // expected output: -3

    return 0;
}
