#include <iostream>
#include <vector>
#include <unordered_map>
#include <algorithm>

std::vector<std::vector<std::string>> groupAnagrams(std::vector<std::string>& strs) {
    std::unordered_map<std::string, std::vector<std::string>> map;

    for (const std::string& s : strs) {
        std::string key = s;
        std::sort(key.begin(), key.end());
        map[key].push_back(s);
    }

    std::vector<std::vector<std::string>> result;
    for (const auto& pair : map) {
        result.push_back(pair.second);
    }

    return result;
}

int main() {
    std::vector<std::string> strs1 = {"eat","tea","tan","ate","nat","bat"};
    std::vector<std::vector<std::string>> result1 = groupAnagrams(strs1);
    for (const auto& group : result1) {
        for (const std::string& s : group) {
            std::cout << s << " ";
        }
        std::cout << std::endl;
    }

    std::vector<std::string> strs2 = {""};
    std::vector<std::vector<std::string>> result2 = groupAnagrams(strs2);
    for (const auto& group : result2) {
        for (const std::string& s : group) {
            std::cout << s << " ";
        }
        std::cout << std::endl;
    }

    std::vector<std::string> strs3 = {"a"};
    std::vector<std::vector<std::string>> result3 = groupAnagrams(strs3);
    for (const auto& group : result3) {
        for (const std::string& s : group) {
            std::cout << s << " ";
        }
        std::cout << std::endl;
    }

    return 0;
}
