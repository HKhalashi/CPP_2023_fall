#include <iostream>
#include <vector>

std::vector<int> twoSum(std::vector<int>& numbers, int target) {
    int left = 0, right = numbers.size() - 1;
    while (left < right) {
        int sum = numbers[left] + numbers[right];
        if (sum == target) {
            return {left + 1, right + 1};  // 1-indexed
        } else if (sum < target) {
            left++;
        } else {
            right--;
        }
    }
    return {};  
}

int main() {
    std::vector<int> numbers1 = {2,7,11,15};
    int target1 = 9;
    std::vector<int> result1 = twoSum(numbers1, target1);
    std::cout << "[" << result1[0] << ", " << result1[1] << "]" << std::endl;  

    std::vector<int> numbers2 = {2,3,4};
    int target2 = 6;
    std::vector<int> result2 = twoSum(numbers2, target2);
    std::cout << "[" << result2[0] << ", " << result2[1] << "]" << std::endl;  

    std::vector<int> numbers3 = {-1,0};
    int target3 = -1;
    std::vector<int> result3 = twoSum(numbers3, target3);
    std::cout << "[" << result3[0] << ", " << result3[1] << "]" << std::endl;  

    return 0;
}
