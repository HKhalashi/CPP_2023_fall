#include <iostream>
#include <vector>

std::vector<std::vector<int>> insert(std::vector<std::vector<int>>& intervals, std::vector<int>& newInterval) {
    std::vector<std::vector<int>> result;

    for (const auto& interval : intervals) {
        if (interval[1] < newInterval[0]) {
            result.push_back(interval);
        } else if (newInterval[1] < interval[0]) {
            result.push_back(newInterval);
            newInterval = interval;
        } else {
            newInterval[0] = std::min(newInterval[0], interval[0]);
            newInterval[1] = std::max(newInterval[1], interval[1]);
        }
    }

    result.push_back(newInterval);
    return result;
}

int main() {
    std::vector<std::vector<int>> intervals1 = {{1,3},{6,9}};
    std::vector<int> newInterval1 = {2,5};
    std::vector<std::vector<int>> result1 = insert(intervals1, newInterval1);
    for (const auto& interval : result1) {
        std::cout << "[" << interval[0] << ", " << interval[1] << "] ";
    }
    std::cout << std::endl;

    std::vector<std::vector<int>> intervals2 = {{1,2},{3,5},{6,7},{8,10},{12,16}};
    std::vector<int> newInterval2 = {4,8};
    std::vector<std::vector<int>> result2 = insert(intervals2, newInterval2);
    for (const auto& interval : result2) {
        std::cout << "[" << interval[0] << ", " << interval[1] << "] ";
    }
    std::cout << std::endl;

    return 0;
}
