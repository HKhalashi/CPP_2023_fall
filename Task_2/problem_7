//128. Longest Consecutive Sequence
#include <iostream>
#include <vector>
#include <unordered_set>
#include <algorithm>

int longestConsecutive(std::vector<int>& nums) {
    std::unordered_set<int> numSet(nums.begin(), nums.end());
    int longestStreak = 0;

    for (int num : nums) {
        // Check if it's the start of a sequence
        if (!numSet.count(num - 1)) {
            int currentNum = num;
            int currentStreak = 1;

            while (numSet.count(currentNum + 1)) {
                currentNum += 1;
                currentStreak += 1;
            }

            longestStreak = std::max(longestStreak, currentStreak);
        }
    }

    return longestStreak;
}

int main() {
    
    std::vector<int> nums1 = {100, 4, 200, 1, 3, 2};
    std::cout << "Longest Consecutive Sequence Length (Test 1): " << longestConsecutive(nums1) << std::endl; // expected output: 4

    
    std::vector<int> nums2 = {0, 3, 7, 2, 5, 8, 4, 6, 0, 1};
    std::cout << "Longest Consecutive Sequence Length (Test 2): " << longestConsecutive(nums2) << std::endl; // expected output: 9

    return 0;
}

